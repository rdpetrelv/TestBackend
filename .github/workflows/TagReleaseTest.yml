name: Tag Push and Release

on:
  push:
    tags:
      - '*'
  release:
    types: [created]

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17.0.8'
          distribution: 'adopt'

      - name: Set up Gradle 8.2.1
        run: |
          wget https://services.gradle.org/distributions/gradle-8.2.1-bin.zip
          unzip -d /opt/gradle gradle-8.2.1-bin.zip
          export PATH=$PATH:/opt/gradle/gradle-8.2.1/bin

      - name: Run tests
        if: github.event_name == 'push'
        run: |
          ./gradlew test --tests com.laundry.laundryMgmt.MachineTest.MachineDaoTest

      - name: Archive documentation
        if: github.event_name == 'push'
        uses: actions/upload-artifact@v2
        with:
          name: documentation
          path: ./docs

      - name: Archive sources
        if: github.event_name == 'push'
        uses: actions/upload-artifact@v2
        with:
          name: sources
          path: ./src

      - name: Get last tag
        id: get_last_tag
        run: |
          if [ "${{ github.event_name }}" == 'release' ]; then
            echo ::set-output name=last_tag::$(git describe --abbrev=0 --tags)
          else
            echo ::set-output name=last_tag::$(git describe --abbrev=0 --tags $(git rev-list --tags --max-count=1))
          fi

      - name: Print last tag
        run: |
          echo "Last tag: ${{ steps.get_last_tag.outputs.last_tag }}"

      - name: Generate Changelog
        id: generate_changelog
        run: |
          last_tag=$(echo "${{ steps.get_last_tag.outputs.last_tag }}")
          changelog=$(git log $last_tag..HEAD --oneline)
          echo "$changelog" > CHANGELOG.md

      - name: Create Release
        if: github.event_name == 'release'
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.MY_ACCESS_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            Release created automatically by GitHub Actions.

      - name: Update Release with Changelog
        if: github.event_name == 'release'
        uses: softprops/action-gh-release@v1
        with:
          files: CHANGELOG.md
          release_id: ${{ steps.create_release.outputs.id }}
          body: ${{ steps.generate_changelog.outputs.changelog }}
          token: ${{ secrets.MY_ACCESS_TOKEN }}