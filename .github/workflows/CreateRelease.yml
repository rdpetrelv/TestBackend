name: Create Release on Tag and test pass

on:
  push:
    tags:
      - '*'

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17.0.8'
          distribution: 'adopt'

      - name: Set up Gradle 8.2.1
        run: |
          wget https://services.gradle.org/distributions/gradle-8.2.1-bin.zip
          unzip -d /opt/gradle gradle-8.2.1-bin.zip
          export PATH=$PATH:/opt/gradle/gradle-8.2.1/bin

      - name: Run tests
        run: |
          ./gradlew test --tests com.laundry.laundryMgmt.MachineTest.MachineDaoTest

      - name: Archive documentation
        uses: actions/upload-artifact@v2
        with:
          name: documentation
          path: build/docs

      - name: Archive sources
        uses: actions/upload-artifact@v2
        with:
          name: sources
          path: src

      - name: Archive entire project
        uses: actions/upload-artifact@v2
        with:
          name: entire-project
          path: .

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.MY_ACCESS_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            Release created automatically by GitHub Actions.

      - name: Upload documentation as release asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build/docs
          asset_name: documentation
          asset_content_type: application/zip

      - name: Upload sources as release asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: src
          asset_name: sources
          asset_content_type: application/zip

      - name: Upload entire project as release asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: .
          asset_name: entire-project
          asset_content_type: application/zip
